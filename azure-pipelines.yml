trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactName: 'dotnet9app'

stages:

# ========================
# Stage 1: Build & Publish
# ========================
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    steps:

    # ⬇ Install .NET SDK 9.0.300
    - task: UseDotNet@2
      inputs:
        version: '9.0.300'
        includePreviewVersions: true
        packageType: 'sdk'

    # ⬇ Restore dependencies
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(solution)'

    # ⬇ Build the project
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    # ⬇ Publish the app to a folder
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false

    # ⬇ Publish artifacts (to deploy later)
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: '$(artifactName)'

# ====================
# Stage 2: Deployment
# ====================
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy to Sample App Environment'
    environment: 
      name: 'Sample App'
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:

          # ✅ Download the artifact from the latest build
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: '$(artifactName)'
              targetPath: '$(Pipeline.Workspace)/deploy'

          # ✅ Ensure IIS is installed
          - powershell: |
              $iisFeature = Get-WindowsOptionalFeature -Online -FeatureName IIS-WebServer
              if ($iisFeature.State -ne 'Enabled') {
                Write-Host 'IIS is not installed. Installing now...'
                Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServer -All -NoRestart
                Write-Host 'IIS installation complete.'
              } else {
                Write-Host 'IIS is already installed.'
              }
            displayName: 'Ensure IIS is installed on Windows 11'

          # ✅ Copy files to IIS folder
          - powershell: |
              Copy-Item -Path "$(Pipeline.Workspace)\deploy\*" -Destination "C:\inetpub\wwwroot" -Recurse -Force
            displayName: 'Copy files to IIS'

          # ✅ Restart IIS
          - powershell: |
              net stop w3svc
              net start w3svc
            displayName: 'Restart IIS'
